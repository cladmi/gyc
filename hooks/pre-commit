#!/bin/sh

# detect if commited files may contain a password


if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Redirect output to stderr.
exec 1>&2

# preceding pattern end with a new line, or a symbol
# which means it is not a longer word than the one matched
NOT_LONGER_WORD_P='$|[^a-zA-Z]'

# match pass passwd password, but not "passed"
PASS_P='[Pp][Aa][Ss][Ss]'
WORD_P='[Ww](|[Oo][Rr])[Dd]'
PASSWORD_P="${PASS_P}(${NOT_LONGER_WORD_P}|${WORD_P})"

# Match Key but not keyboard for example
KEY_P="[Kk][Ee][Yy](${NOT_LONGER_WORD_P})"

# detect if files may contain a password
WARNING_PATTERN="(${PASSWORD_P})|(${KEY_P})"





check_forbidden_patterns() {
    PATTERN=$1
    files_adding_wrong_pattern=$(git diff-index -G"$PATTERN" --exit-code --name-only --cached $against --)
    ret=$?

    if [ $ret != 0 ]; then
        echo "WARNING:"
        echo "Following files match case insensitive 'pass|passwd|password':"
        echo

        for file in "$files_adding_wrong_pattern"; do
                echo $file
                grep -n -E $WARNING_PATTERN "$file"
        done

        echo
        echo "Added files may contain a cleartext password"
    fi

    return $ret
}


check_file_permissions_and_ownage() {
    ret=0
    # TODO
    # other and groups have no read permissions
    # file not owned by user
    #  http://www.cyberciti.biz/faq/display-file-or-file-system-status/

    return $ret
}


return_value=0

check_forbidden_patterns "$WARNING_PATTERN"
return_value=$(( $return_value || $? ))
check_file_permissions_and_ownage
return_value=$(( $return_value || $? ))



if [ $return_value != 0 ]; then
    echo
    echo "Protection can be bypassed by adding"
    echo "    --no-verify    option to commit"
    echo
fi

exit $return_value

